{
  "_args": [
    [
      {
        "raw": "nativescript-dev-sass@1.3.2",
        "scope": null,
        "escapedName": "nativescript-dev-sass",
        "name": "nativescript-dev-sass",
        "rawSpec": "1.3.2",
        "spec": "1.3.2",
        "type": "version"
      },
      "C:\\Users\\sbobba\\Documents\\NativeScript\\MusicMeta"
    ]
  ],
  "_from": "nativescript-dev-sass@1.3.2",
  "_id": "nativescript-dev-sass@1.3.2",
  "_inCache": true,
  "_location": "/nativescript-dev-sass",
  "_nodeVersion": "6.11.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/nativescript-dev-sass-1.3.2.tgz_1505399293522_0.2553118539508432"
  },
  "_npmUser": {
    "name": "tns-bot",
    "email": "nativescript@telerik.com"
  },
  "_npmVersion": "4.6.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "nativescript-dev-sass@1.3.2",
    "scope": null,
    "escapedName": "nativescript-dev-sass",
    "name": "nativescript-dev-sass",
    "rawSpec": "1.3.2",
    "spec": "1.3.2",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/nativescript-dev-sass/-/nativescript-dev-sass-1.3.2.tgz",
  "_shasum": "511a1d210a89175a70cf73565bc9dd45cb7b0788",
  "_shrinkwrap": null,
  "_spec": "nativescript-dev-sass@1.3.2",
  "_where": "C:\\Users\\sbobba\\Documents\\NativeScript\\MusicMeta",
  "author": {
    "name": "Todd Anglin",
    "email": "toddanglin@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/toddanglin/nativescript-dev-sass/issues"
  },
  "dependencies": {
    "bluebird": "^3.4.6",
    "glob": "*",
    "nativescript-hook": "^0.2.0",
    "node-sass": "*"
  },
  "description": "SASS CSS pre-processor for NativeScript projects.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "511a1d210a89175a70cf73565bc9dd45cb7b0788",
    "tarball": "https://registry.npmjs.org/nativescript-dev-sass/-/nativescript-dev-sass-1.3.2.tgz"
  },
  "homepage": "https://github.com/toddanglin/nativescript-dev-sass",
  "keywords": [
    "NativeScript",
    "SASS",
    "CSS"
  ],
  "license": "Apache-2.0",
  "maintainers": [
    {
      "name": "toddanglin",
      "email": "toddanglin@gmail.com"
    },
    {
      "name": "tns-bot",
      "email": "nativescript@telerik.com"
    },
    {
      "name": "tbozhikov",
      "email": "t_bozhikov@yahoo.com"
    },
    {
      "name": "tachev",
      "email": "nevermindd7@gmail.com"
    },
    {
      "name": "veselina.radeva",
      "email": "veselina.radeva@progress.com"
    },
    {
      "name": "zbranzov",
      "email": "branzov.z@gmail.com"
    },
    {
      "name": "angel.tsvetkov",
      "email": "angel.tsvetkov@mail.com"
    }
  ],
  "name": "nativescript-dev-sass",
  "nativescript": {
    "hooks": [
      {
        "type": "before-prepare",
        "script": "lib/before-prepare.js",
        "inject": true
      },
      {
        "type": "after-prepare",
        "script": "lib/after-prepare.js",
        "inject": true
      },
      {
        "type": "before-watch",
        "script": "lib/watch.js",
        "inject": true
      },
      {
        "type": "after-watch",
        "script": "lib/after-watch.js",
        "inject": true
      }
    ],
    "tns-ios": {
      "version": "3.0.0"
    }
  },
  "optionalDependencies": {},
  "readme": "SASS CSS pre-processor for NativeScript projects\n=======================================\n\n[![npm version](https://badge.fury.io/js/nativescript-dev-sass.svg)](https://badge.fury.io/js/nativescript-dev-sass)\n\n----------\nThis plugin uses the [node-sass compiler](https://www.npmjs.com/package/node-sass) to transpile SCSS files to CSS files in [NativeScript](https://www.nativescript.org/) projects.\n\n## How to use\n\nAdd the plug-in to your project:\n```\n$ tns install sass\n```\nAlternatively:\n```\n$ npm install nativescript-dev-sass --save-dev\n```\n\nEither of the above commands installs this module and installs the necessary NativeScript build and LiveSync hooks. SASS CSS pre-processing of all `.scss` or `.sass` files inside the `app` folder happens when the project is prepared for build (including LiveSync, Emulate and Watch commands).\n\nAfter the plugin runs, it will automatically delete all `.scss` and `.sass` files from the app package (leaving only the compiled `.css`)\n\n## LiveSync Support\n\nThis plugin will work in all versions of NativeScript to transpile SCSS and SASS files, but for LiveSync to work as expected with real-time style updates:\n- NativeScript 2.5 and higher, use version 1.x and higher of this plugin (latest version)\n- NativeScript 2.4.x and lower, use version 0.4.2\n\nYou can install a specific version of this plug-in using this command:\n```\n$ npm install nativescript-dev-sass@0.4.2 --save-dev\n```\n\nTo use the latest release candidates (when available), use this command:\n```\n$ npm install nativescript-dev-sass@rc --save-dev\n```\nIn NativeScript 2.4 and lower, the current version of this plug-in will cause LiveSync to trigger an app restart. The last version of this plug-in that supports real-time updates (with no app restart) in NativeScript 2.4 and lower is 0.4.2.\n\n## Breaking Changes\n\nv1.0.0\n- `@import` statements require relative paths (previous versions built all paths relative app root)\n- Importing stylesheets from `node_modules` now requires \"`~`\" to start the path (ex: `@import '~nativescript-theme-core'` instead of `@import 'nativescript-theme-core'`)\n\n## SASS @import syntax\n\nTo import external stylesheets, use the standard SASS syntax:\n```\n@import 'variables'\n```\nAs of v1.0.0 of this plug-in, imports use relative paths. For example, to reference an external stylesheet in the root `app` directory from a stylesheet in a sub-folder:\n```\n@import '../variables'\n\nOR\n\n@import '~/variables' // Supported in v1.1.0+\n```\n\nAs of v1.0.0 of this plugin, you can also reference SASS files in the `node_modules` directory using the tilde (`~`) notation. For example, to reference a SASS stylesheet in the `nativescript-theme-core` plugin:\n```\n@import '~nativescript-theme-core/scss/platforms/index.ios'\n```\n\nNOTE: Do not include a forward slash after the tilde. Use `~[node_modules folder name]` and not `~/[node_modules folder name]`. The later will not resolve correctly.\n\n### Using file extensions with @import\n\nIn some cases, the current version of node-sass requires `@import` statements to explicitly include the filename extension (like `.scss`). This occurs if files with the same name exist in the same path.\n\nFor example:\n```\nvariables.scss\nvariables.css\n_variables.scss\n```\n\nNode-sass will throw an error if the `@import 'variables';` syntax is used. As a workaround, use an explicit filename, like: `@import 'variables.scss';`\n\nThis is currently on the roadmap for node-sass 4.0. [See this issue for more detail](https://github.com/sass/node-sass/issues/1222).\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ToddAnglin/nativescript-dev-sass.git"
  },
  "scripts": {
    "demo.android": "npm run preparedemo && cd demo && tns run android --emulator",
    "demo.ios": "npm run preparedemo && cd demo && tns run ios --emulator",
    "demo.ios.device": "npm run preparedemo && cd demo && tns run ios",
    "postinstall": "node postinstall.js",
    "preparedemo": "cd demo && npm uninstall nativescript-dev-sass && npm install .. --save-dev && tns install",
    "preuninstall": "node preuninstall.js",
    "setup": "npm i && cd demo && npm i && cd .. && cd demo && npm install .. --save-dev && cd ..",
    "test": "exit 0",
    "test.android": "cd demo && tns test android",
    "test.ios": "cd demo && tns test ios --emulator",
    "test.ios.device": "cd demo && tns test ios"
  },
  "version": "1.3.2"
}
